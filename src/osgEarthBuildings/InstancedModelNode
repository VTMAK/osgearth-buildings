#pragma once

#include <osgEarth/ModelSource>

#include <string>
#include <vector>
#include <osg/Matrixd>

#include <map>

namespace osgEarth {
   namespace Buildings
   {
      class InstancedModelNode : public osg::Object
      {
      public:

         InstancedModelNode();
         InstancedModelNode(const InstancedModelNode& rhs, const osg::CopyOp& copyop);
         InstancedModelNode& operator=(const InstancedModelNode& rhs);


         META_Object(osgEarth::Buildings, InstancedModelNode);


         typedef std::vector<osg::Matrixd> MatrixdVector;
         struct Instances
         {
            MatrixdVector matrices;
            float minRange;
            float maxRange;
         };
         
         typedef std::map< std::string, Instances > MapModelToInstances;

         MapModelToInstances _mapModelToInstances;
      };
   }
}